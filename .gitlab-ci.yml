stages:
  - build
  - test

# Install additional packages, like a C compiler and cmake
#before_script:
#- apt-get update -yqq
#- apt-get install -yqq --no-install-recommends build-essential cmake

# Use cargo to test the project on stable toolchain
cargo:test:
  stage: test
  image: rust:latest
  script:
    - rustc --version && cargo --version      # Print version info for debugging
    - cargo test --all --verbose

# Use cargo to check the source code formatting
cargo:check-format:
  stage: test
  image: rust:latest
  before_script:
    - rustup component add rustfmt-preview
  script:
    - rustc --version && cargo --version      # Print version info for debugging
    - cargo fmt --all --verbose -- --check

# Use cargo to run clippy (Rust linter)
cargo:clippy:
  stage: test
  image: rust:latest
  before_script:
    - rustup component add clippy-preview
  script:
    - rustc --version && cargo --version      # Print version info for debugging
    - cargo clippy -- -D warnings
  allow_failure: true                         # allow lint failures for now

# Use cargo to test the project on nightly toolchain
cargo:test-nightly:
  stage: test
  image: rustlang/rust:nightly
  script:
    - rustc --version && cargo --version      # Print version info for debugging
    - cargo test --all --verbose
  allow_failure: true
